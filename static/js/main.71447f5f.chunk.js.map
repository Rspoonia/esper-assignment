{"version":3,"sources":["components/navbar/index.js","constants.js","components/main/foldersUI.js","components/main/createdFolders.js","components/main/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","setActiveMenu","mainMenuData","className","map","item","index","onClick","data-testid","src","iconUrl","alt","name","mainMenu","items","FoldersUI","deleteFolder","renameFolderHandler","useState","rename","setRename","changedName","setChangedName","disableContextMenu","setDisableContextMenu","ref","useRef","useEffect","current","focus","newNameHandler","e","preventDefault","newNameValue","target","value","useDrag","type","collect","monitor","isDragging","setTimeout","drag","id","disable","style","transform","x","y","onChange","onBlur","onKeyDown","key","data","CreatedFolders","menuItems","length","MainSection","setMainMenuItems","activeMenu","filter","useDrop","accept","drop","tempData","activeMenuIndex","findIndex","folder","currentFolderIndex","getDifferenceFromInitialOffset","stopPropagation","newName","itemLength","tempY","tempX","push","Date","getTime","altText","uuidv4","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71447f5f.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n// for show main menu folders\r\nconst NavBar = ({ setActiveMenu, mainMenuData }) => {\r\n  return (\r\n    <section className=\"nav-wrapper\">\r\n      {mainMenuData.map((item, index) => (\r\n        <div\r\n          onClick={() => setActiveMenu(item)}\r\n          key={item.name}\r\n          data-testid={`nav-item-${index + 1}`}\r\n        >\r\n          <img\r\n            src={item.iconUrl}\r\n            className=\"nav-images\"\r\n            alt={item.alt || item.name || \"\"}\r\n          />\r\n          {item.name}\r\n        </div>\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","export const mainMenu = [\r\n  {\r\n    name: \"Desktop\",\r\n    iconUrl: \"https://img.icons8.com/emoji/48/000000/desktop-computer.png\",\r\n    alt: \"desktop\",\r\n    items: [],\r\n  },\r\n  {\r\n    name: \"Downloads\",\r\n    iconUrl: \"https://img.icons8.com/dusk/64/000000/downloads-folder--v1.png\",\r\n    alt: \"downloads\",\r\n    items: [],\r\n  },\r\n  {\r\n    name: \"Music\",\r\n    iconUrl: \"https://img.icons8.com/doodle/96/000000/photos-folder.png\",\r\n    alt: \"music\",\r\n    items: [],\r\n  },\r\n]\r\n\r\nexport const activeMenuForTest = [\r\n  {\r\n    name: \"Music\",\r\n    iconUrl: \"https://img.icons8.com/doodle/96/000000/photos-folder.png\",\r\n    alt: \"music\",\r\n    items: [],\r\n  },\r\n]\r\n\r\nexport const newFolderSrc =\r\n  \"https://img.icons8.com/plasticine/100/000000/folder-invoices.png\"\r\n","import React, { useState, useRef, useEffect } from \"react\"\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\"\r\nimport { useDrag } from \"react-dnd\"\r\n\r\nconst FoldersUI = ({ item, deleteFolder, renameFolderHandler }) => {\r\n  // to check weather rename is called\r\n  const [rename, setRename] = useState(false)\r\n  // to hold new name of a function\r\n  const [changedName, setChangedName] = useState(item.name)\r\n\r\n  const [disableContextMenu, setDisableContextMenu] = useState(false)\r\n\r\n  const ref = useRef()\r\n  // for call a function after input box out of fox\r\n  useEffect(() => {\r\n    rename && ref.current.focus()\r\n  }, [rename])\r\n\r\n  // for rename a folder on enter and out of focus\r\n  const newNameHandler = (e) => {\r\n    e.preventDefault()\r\n    const newNameValue = !e.target.value ? item.name : e.target.value\r\n    renameFolderHandler(item, newNameValue)\r\n    setRename(false)\r\n  }\r\n  const [, drag] = useDrag(() => ({\r\n    type: \"box\",\r\n    item,\r\n    collect: (monitor) => {\r\n      if (monitor.isDragging()) setDisableContextMenu(true)\r\n      if (!monitor.isDragging()) {\r\n        setTimeout(() => setDisableContextMenu(false), 1500)\r\n      }\r\n    },\r\n  }))\r\n\r\n  return (\r\n    <div>\r\n      <ContextMenuTrigger id={item.id} disable={disableContextMenu}>\r\n        <span\r\n          className=\"folder-created\"\r\n          ref={drag}\r\n          style={{ transform: `translate(${item.x}px, ${item.y}px)` }}\r\n        >\r\n          <img src={item.iconUrl} alt={item.name} />\r\n          {rename ? (\r\n            <input\r\n              value={changedName}\r\n              ref={ref}\r\n              onChange={(e) => setChangedName(e.target.value)}\r\n              onBlur={(e) => newNameHandler(e)}\r\n              onKeyDown={(e) => e.key === \"Enter\" && newNameHandler(e)}\r\n            />\r\n          ) : (\r\n            <span>{item.name}</span>\r\n          )}\r\n        </span>\r\n      </ContextMenuTrigger>\r\n      <ContextMenu className=\"menu\" id={item.id}>\r\n        <MenuItem\r\n          onClick={(e) => deleteFolder(e, item)}\r\n          data={{ item }}\r\n          className=\"menuItem\"\r\n        >\r\n          Delete\r\n        </MenuItem>\r\n        <MenuItem\r\n          data={{ item }}\r\n          className=\"menuItem\"\r\n          onClick={() => setRename(true)}\r\n        >\r\n          Rename\r\n        </MenuItem>\r\n      </ContextMenu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FoldersUI\r\n","import React from \"react\"\r\nimport FoldersUI from \"./foldersUI\"\r\n\r\nconst CreatedFolders = ({ menuItems, deleteFolder, renameFolderHandler }) => {\r\n  // for delete a folder\r\n\r\n  return (\r\n    <div className=\"wrapper-items\">\r\n      {menuItems[0].items?.length > 0 ? (\r\n        menuItems[0].items.map((item) => (\r\n          <FoldersUI\r\n            item={item}\r\n            key={item.id}\r\n            deleteFolder={deleteFolder}\r\n            renameFolderHandler={renameFolderHandler}\r\n          />\r\n        ))\r\n      ) : (\r\n        <h2>No folder created</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatedFolders\r\n","import React from \"react\"\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\"\r\nimport CreatedFolders from \"./createdFolders\"\r\nimport { newFolderSrc } from \"../../constants\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { useDrop } from \"react-dnd\"\r\nimport \"./react-contextmenu.css\"\r\n\r\nconst MainSection = ({ mainMenuData, setMainMenuItems, activeMenu }) => {\r\n  // for create new folder\r\n  const handleClick = () => {\r\n    const tempData = [...mainMenuData]\r\n    const activeMenuIndex = tempData.findIndex(\r\n      (item) => item.name === activeMenu.name\r\n    )\r\n    const itemLength = tempData[activeMenuIndex].items.length\r\n    const tempY = tempData[activeMenuIndex].items.length < 10 ? 20 : 160\r\n    const tempX = itemLength < 10 ? itemLength * 120 : itemLength * 120 - 1200\r\n\r\n    tempData[activeMenuIndex].items.push({\r\n      name: \"New Folder \" + new Date().getTime(),\r\n      iconUrl: newFolderSrc,\r\n      altText: activeMenu.name + itemLength,\r\n      id: uuidv4(),\r\n      x: tempX + 20,\r\n      y: 20 + tempY,\r\n    })\r\n    setMainMenuItems(tempData)\r\n  }\r\n  // for delete a created folder\r\n  const deleteFolder = (e, data) => {\r\n    e.stopPropagation()\r\n    const tempData = [...mainMenuData]\r\n    const activeMenuIndex = tempData.findIndex(\r\n      (item) => item.name === activeMenu.name\r\n    )\r\n    tempData[activeMenuIndex].items = tempData[activeMenuIndex].items.filter(\r\n      (item) => item.id !== data.id\r\n    )\r\n    setMainMenuItems(tempData)\r\n  }\r\n  // all values of active menu item\r\n  const menuItems = mainMenuData.filter((item) => item.name === activeMenu.name)\r\n  // for rename a folder\r\n  const renameFolderHandler = (item, newName) => {\r\n    const tempData = [...mainMenuData]\r\n    const activeMenuIndex = tempData.findIndex(\r\n      (item) => item.name === activeMenu.name\r\n    )\r\n    const currentFolderIndex = tempData[activeMenuIndex].items.findIndex(\r\n      (folder) => folder.id === item.id\r\n    )\r\n    tempData[activeMenuIndex].items[currentFolderIndex].name = newName\r\n    setMainMenuItems(tempData)\r\n  }\r\n\r\n  const [, drop] = useDrop(\r\n    () => ({\r\n      accept: \"box\",\r\n      drop: (item, monitor) => {\r\n        const tempData = [...mainMenuData]\r\n        const activeMenuIndex = tempData.findIndex(\r\n          (folder) => folder.name === activeMenu.name\r\n        )\r\n        const currentFolderIndex = tempData[activeMenuIndex].items.findIndex(\r\n          (folder) => folder.id === item.id\r\n        )\r\n        const { x = 20, y = 20 } = monitor.getDifferenceFromInitialOffset()\r\n\r\n        tempData[activeMenuIndex].items[currentFolderIndex].x += x\r\n        tempData[activeMenuIndex].items[currentFolderIndex].y += y\r\n\r\n        setMainMenuItems(tempData)\r\n      },\r\n    }),\r\n    [activeMenu.name]\r\n  )\r\n\r\n  return (\r\n    <section className=\"main-wrapper\" ref={drop}>\r\n      <ContextMenuTrigger id=\"wrapper-id\">\r\n        <div className=\"main-section\">\r\n          <CreatedFolders\r\n            menuItems={menuItems}\r\n            deleteFolder={deleteFolder}\r\n            renameFolderHandler={renameFolderHandler}\r\n          />\r\n        </div>\r\n      </ContextMenuTrigger>\r\n      <ContextMenu className=\"menu\" id=\"wrapper-id\">\r\n        <MenuItem\r\n          onClick={handleClick}\r\n          data={{ item: \"Home\" }}\r\n          className=\"menuItem\"\r\n        >\r\n          Create\r\n        </MenuItem>\r\n      </ContextMenu>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default MainSection\r\n","import React, { useState } from \"react\"\nimport NavBar from \"./components/navbar\"\nimport \"./style.css\"\nimport { mainMenu } from \"./constants\"\nimport MainSection from \"./components/main\"\nimport { DndProvider } from \"react-dnd\"\nimport { HTML5Backend } from \"react-dnd-html5-backend\"\n\nfunction App() {\n  /**\n   * for track user folder location\n   */\n  const [activeMenu, setActiveMenu] = useState(mainMenu[0])\n  /**\n   * for store user folders data\n   */\n  const [mainMenuData, setMainMenuItems] = useState([...mainMenu])\n\n  return (\n    <div className=\"App\">\n      <h2 data-testid=\"active-menu-id\">{activeMenu.name}</h2>\n      <div className=\"wrapper\">\n        <NavBar setActiveMenu={setActiveMenu} mainMenuData={mainMenuData} />\n        <DndProvider backend={HTML5Backend}>\n          <MainSection\n            mainMenuData={mainMenuData}\n            setMainMenuItems={setMainMenuItems}\n            activeMenu={activeMenu}\n          />\n        </DndProvider>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}